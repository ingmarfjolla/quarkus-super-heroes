---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    prometheus.io/scheme: http
    app.openshift.io/vcs-url: https://github.com/quarkusio/quarkus-super-heroes
    app.openshift.io/connects-to: "villains-db,otel-collector"
    app.openshift.io/vcs-ref: main
    app.quarkus.io/commit-id: dc5044e4635b639b7165a38a9a97fece36f9427c
    app.quarkus.io/build-timestamp: 2023-03-17 - 16:07:52 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8084"
  labels:
    app.kubernetes.io/name: rest-villains
    app.kubernetes.io/part-of: villains-service
    app.kubernetes.io/version: {{ .Values.app.version }}
    app: rest-villains
    application: villains-service
    system: quarkus-super-heroes
    app.openshift.io/runtime: quarkus
  name: rest-villains
spec:
  replicas: 1
  selector:
    app.kubernetes.io/version: {{ .Values.app.version }}
    app.kubernetes.io/part-of: villains-service
    app.kubernetes.io/name: rest-villains
  template:
    metadata:
      annotations:
        prometheus.io/scheme: http
        app.openshift.io/vcs-url: https://github.com/quarkusio/quarkus-super-heroes
        app.openshift.io/connects-to: "villains-db,otel-collector"
        app.openshift.io/vcs-ref: main
        app.quarkus.io/commit-id: dc5044e4635b639b7165a38a9a97fece36f9427c
        app.quarkus.io/build-timestamp: 2023-03-17 - 16:07:52 +0000
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8084"
      labels:
        app: rest-villains
        application: villains-service
        system: quarkus-super-heroes
        app.openshift.io/runtime: quarkus
        app.kubernetes.io/version: {{ .Values.app.version }}
        app.kubernetes.io/part-of: villains-service
        app.kubernetes.io/name: rest-villains
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: rest-villains-config-creds
            - configMapRef:
                name: rest-villains-config
          image: {{ .Values.app.image }}
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: {{ .Values.app.livenessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.app.livenessProbe.httpGet.path }}
              port: {{ .Values.app.livenessProbe.httpGet.port }}
              scheme: {{ .Values.app.livenessProbe.httpGet.scheme }}
            initialDelaySeconds: {{ .Values.app.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.app.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.app.livenessProbe.timeoutSeconds }}
          name: rest-villains
          ports:
            - containerPort: 8084
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: {{ .Values.app.readinessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.app.readinessProbe.httpGet.path }}
              port: {{ .Values.app.readinessProbe.httpGet.port }}
              scheme: {{ .Values.app.readinessProbe.httpGet.scheme }}
            initialDelaySeconds: {{ .Values.app.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.app.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.app.readinessProbe.timeoutSeconds }}
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - rest-villains
        from:
          kind: ImageStreamTag
          name: rest-villains:native-latest
      type: ImageChange
