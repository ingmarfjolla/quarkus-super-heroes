---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.openshift.io/connects-to: "heroes-db,otel-collector"
    app.quarkus.io/vcs-ref: main
    app.quarkus.io/vcs-url: https://github.com/quarkusio/quarkus-super-heroes
    app.quarkus.io/commit-id: e6b908a2aad15d5f15e203fc2a7e40dd28e85bab
    app.quarkus.io/build-timestamp: 2023-02-20 - 20:43:47 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8083"
    prometheus.io/scheme: http
  labels:
    app: rest-heroes
    application: heroes-service
    system: quarkus-super-heroes
    app.kubernetes.io/version: java11-latest
    app.kubernetes.io/part-of: heroes-service
    app.kubernetes.io/name: rest-heroes
  name: rest-heroes
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/version: java11-latest
      app.kubernetes.io/part-of: heroes-service
      app.kubernetes.io/name: rest-heroes
  template:
    metadata:
      annotations:
        app.openshift.io/connects-to: "heroes-db,otel-collector"
        app.quarkus.io/vcs-ref: main
        app.quarkus.io/vcs-url: https://github.com/quarkusio/quarkus-super-heroes
        app.quarkus.io/commit-id: e6b908a2aad15d5f15e203fc2a7e40dd28e85bab
        app.quarkus.io/build-timestamp: 2023-02-20 - 20:43:47 +0000
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8083"
        prometheus.io/scheme: http
      labels:
        app: rest-heroes
        application: heroes-service
        system: quarkus-super-heroes
        app.kubernetes.io/version: java11-latest
        app.kubernetes.io/part-of: heroes-service
        app.kubernetes.io/name: rest-heroes
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: rest-heroes-config
            - secretRef:
                name: rest-heroes-config-creds
          image: {{ .Values.app.image }}
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: {{ .Values.app.livenessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.app.livenessProbe.httpGet.path }}
              port: {{ .Values.app.livenessProbe.httpGet.port }}
              scheme: {{ .Values.app.livenessProbe.httpGet.scheme }}
            initialDelaySeconds: {{ .Values.app.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.app.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.app.livenessProbe.timeoutSeconds }}
          name: rest-heroes
          ports:
            - containerPort: 8083
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: {{ .Values.app.readinessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.app.readinessProbe.httpGet.path }}
              port: {{ .Values.app.readinessProbe.httpGet.port }}
              scheme: {{ .Values.app.readinessProbe.httpGet.scheme }}
            initialDelaySeconds: {{ .Values.app.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.app.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.app.readinessProbe.timeoutSeconds }}
          resources:
            limits:
              memory: 768Mi
            requests:
              memory: 256Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: heroes-db
    application: heroes-service
    system: quarkus-super-heroes
    app.kubernetes.io/part-of: heroes-service
    app.openshift.io/runtime: postgresql
  name: heroes-db
spec:
  replicas: 1
  selector:
    matchLabels:
      name: heroes-db
  template:
    metadata:
      labels:
        name: heroes-db
        application: heroes-service
        system: quarkus-super-heroes
    spec:
      containers:
        - envFrom:
            - secretRef:
                name: heroes-db-config
          image: bitnami/postgresql:14
          name: heroes-db
          ports:
            - containerPort: 5432
          resources:
            limits:
              memory: 128Mi
            requests:
              memory: 32Mi
          volumeMounts:
            - mountPath: /bitnami/postgresql
              name: heroes-db-data
            - mountPath: /docker-entrypoint-initdb.d
              name: heroes-db-init-data
      initContainers:
        - command:
            - sh
            - get-data.sh
          image: registry.access.redhat.com/ubi8-minimal:8.6
          name: get-data
          volumeMounts:
            - mountPath: /docker-entrypoint-preinitdb.d
              name: heroes-db-init
            - mountPath: /docker-entrypoint-initdb.d
              name: heroes-db-init-data
          workingDir: /docker-entrypoint-preinitdb.d
      volumes:
        - emptyDir: {}
          name: heroes-db-data
        - emptyDir: {}
          name: heroes-db-init-data
        - configMap:
            name: heroes-db-init
          name: heroes-db-init
